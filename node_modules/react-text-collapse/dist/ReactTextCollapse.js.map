{"version":3,"sources":["../src/ReactTextCollapse.js"],"names":["ReactTextCollapse","props","toggleAction","setState","collapse","state","options","collapseText","expandText","textStyle","float","minHeight","maxHeight","children","h","display","overflow","height","renderHelperText","propTypes","node","isRequired","object"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;;;;;;;IAEqBA,iB;;;AAMnB,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA,sIACXA,KADW;;AAAA,UAwBnBC,YAxBmB,GAwBJ,YAAM;AACnB,YAAKC,QAAL,CAAc;AAAA,eAAU,EAAEC,UAAU,CAACC,MAAMD,QAAnB,EAAV;AAAA,OAAd;AACD,KA1BkB;;AAAA,QAIJA,QAJI,GAKb,MAAKH,KALQ,CAIfK,OAJe,CAIJF,QAJI;;AAMjB,UAAKC,KAAL,GAAa;AACXD,gBAAUA,WAAWA,QAAX,GAAsB;AADrB,KAAb;AANiB;AASlB;;;;uCAEkB;AAAA,2BAGb,KAAKH,KAHQ,CAEfK,OAFe;AAAA,UAEJC,YAFI,kBAEJA,YAFI;AAAA,UAEUC,UAFV,kBAEUA,UAFV;AAAA,UAEsBC,SAFtB,kBAEsBA,SAFtB;AAAA,UAITL,QAJS,GAII,KAAKC,KAJT,CAITD,QAJS;;;AAMjB,UAAIA,QAAJ,EAAc;AACZ,eAAO;AAAA;AAAA,YAAK,kBAASM,aAAT,IAA2BD,SAA3B,CAAL;AAA8CF;AAA9C,SAAP;AACD;;AAED,aAAO;AAAA;AAAA,UAAK,kBAASG,aAAT,IAA2BD,SAA3B,CAAL;AAA8CD;AAA9C,OAAP;AACD;;;6BAMQ;AAAA;;AAAA,mBAIH,KAAKP,KAJF;AAAA,mCAELK,OAFK;AAAA,UAEMK,SAFN,mBAEMA,SAFN;AAAA,UAEiBC,SAFjB,mBAEiBA,SAFjB;AAAA,UAGLC,QAHK,UAGLA,QAHK;AAAA,UAKCT,QALD,GAKc,KAAKC,KALnB,CAKCD,QALD;;AAMP,aACE;AAAA;AAAA;AACE,wBAAc,EAAEU,GAAG,CAAL,EADhB;AAEE,iBAAO,EAAEA,GAAG,yBAAOV,WAAWO,SAAX,GAAuBC,SAA9B,CAAL;AAFT;AAIG;AAAA,cAAGE,CAAH,QAAGA,CAAH;AAAA,iBACC;AAAA;AAAA;AACE;AAAA;AAAA;AACE,uBAAO;AACLC,kCADK;AAELC,4BAAWZ,4BAFN;AAGLa,0BAAQ,KAAGH,CAAH,GAAS;AAHZ;AADT;AAOGD;AAPH,aADF;AAUE;AAAA;AAAA,gBAAK,SAAS,OAAKX,YAAnB;AAAkC,qBAAKgB,gBAAL;AAAlC;AAVF,WADD;AAAA;AAJH,OADF;AAqBD;;;;;;AA7DkBlB,iB,CACZmB,S,GAAY;AACjBN,YAAU,oBAAUO,IAAV,CAAeC,UADR;AAEjBf,WAAS,oBAAUgB,MAAV,CAAiBD;AAFT,C;kBADArB,iB","file":"ReactTextCollapse.js","sourcesContent":["import React, { Component } from 'react'\nimport { Motion, spring } from 'react-motion'\nimport PropTypes from 'prop-types'\n\nexport default class ReactTextCollapse extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    options: PropTypes.object.isRequired\n  }\n\n  constructor(props) {\n    super(props)\n\n    const {\n      options: { collapse }\n    } = this.props\n    this.state = {\n      collapse: collapse ? collapse : true\n    }\n  }\n\n  renderHelperText() {\n    const {\n      options: { collapseText, expandText, textStyle }\n    } = this.props\n    const { collapse } = this.state\n\n    if (collapse) {\n      return <div style={{ float: `left`, ...textStyle }}>{collapseText}</div>\n    }\n\n    return <div style={{ float: `left`, ...textStyle }}>{expandText}</div>\n  }\n\n  toggleAction = () => {\n    this.setState(state => ({ collapse: !state.collapse }))\n  }\n\n  render() {\n    const {\n      options: { minHeight, maxHeight },\n      children\n    } = this.props\n    const { collapse } = this.state\n    return (\n      <Motion\n        defaultStyle={{ h: 0 }}\n        style={{ h: spring(collapse ? minHeight : maxHeight) }}\n      >\n        {({ h }) => (\n          <div>\n            <div\n              style={{\n                display: `block`,\n                overflow: (collapse ? `hidden` : `auto`),\n                height: `${h}` + 'px'\n              }}\n            >\n              {children}\n            </div>\n            <div onClick={this.toggleAction}>{this.renderHelperText()}</div>\n          </div>\n        )}\n      </Motion>\n    )\n  }\n}\n"]}